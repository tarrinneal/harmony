type Server @withSubscription {
  id: ID!
  name: String! @search
  isDirectMessage: Boolean!
  isPrivate: Boolean!
  channels: [Channel]
  members: [User] @hasInverse(field: servers)
  owner: User!
  allowGuests: Boolean!
  emotes: [Emote]
}

type Channel @withSubscription {
  id: ID!
  name: String! @search
  type: ChannelType!
  allowGuests: Boolean!
  members: [User]
  messages: [Message]
}

enum ChannelType {
  Voice
  Text
}

type Message @withSubscription {
  id: ID!
  user: User!
  timeStamp: DateTime
  contents: String!
  top: Boolean!
  edited: Boolean!
  updated: DateTime
  reactions: [Reaction]
  children: [Message]
}

type Reaction @withSubscription {
  id: ID!
  emote: Emote!
  users: [User!]
}

type Emote {
  id: ID!
  name: String!
  url: String!
}

type User {
  uid: String! @id @search(by: exact)
  email: String!
  displayName: String! @search
  avatar: String
  servers: [Server] @hasInverse(field: members)
  directMessages: [Server]
  serverInfo: [ServerInfo]
  friends: [User] @hasInverse(field: friends)
}

type ServerInfo @withSubscription {
  id: ID!
  server: Server!
  index: Int!
  joinTime: DateTime!
  channels: [Channel]
  memberType: MemberType!
}

enum MemberType {
  admin
  mod
  member
  untrusted
}

# Dgraph.Authorization {"VerificationKey":"super-authkey","Header":"X-Harmony-App-Auth", "jwkurl":"https://www.googleapis.com/service_accounts/v1/jwk/securetoken@system.gserviceaccount.com", "Namespace":"sub","Algo":"RS256","Audience":["harmony-7bb0f"]}
